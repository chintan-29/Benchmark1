ManualCPU Benchmark :* To run CPU Benchmark follow below instructions : 1. Go to “./CPU” directory in terminal.2. Find processor speed in GIOPS :     a.  Compile “CpuMul.java” in terminal.                    $ javac CpuMul.javab. Then run it using JVM using below command    $ java CpuMul <no of threads> <no of iterations>    Here,  no of threads : 1 or 2 or 4 or 8             no of iterations : enter 1-10 million to get better result.    Ex : java CpuMul 1 10000000   This will give total milliseconds to execute operations and CPU speed in GIOPS.           3.   Find processor speed in GFLOPS :     a.  Compile “CpuMul.java” in terminal.                    $ javac CpuMulF.javac. Then run it using JVM using below command    $ java CpuMulF <no of threads> <no of iterations>    Here,  no of threads : 1 or 2 or 4 or 8             no of iterations : enter 1-10 million to get better result.    Ex : java CpuMul 1 10000000   This will give total milliseconds to execute operations and CPU speed in GFLOPS.4. Here java compiler may do optimization for small number of operations. So, you need to bypass optimization using below command while run JVM.                    $ java CpuMulF 1 1000000000 -Djava.compiler=NONEGPU Benchmark :* To run GPU Benchmark follow below instructions : 1. Go to “./GPU” directory in terminal.2. Run below command to create executable file from makefile.$ makeThis will create on executable file “GPU” in GPU directory.3. Go to folder GPU and run executable file “GPU” and give input to find GPU   speed or  GPU memory bandwidth.Ex.  Please select option from below:1 ->Measure GPU speed2 ->Measure Memory Bandwidth: a:  If you select 1 then Please select option from below:1 ->Measure in GIOPS2 ->Measure in GFLOPS:                 Hence, you will get result either in GIOPS or GFLOPS in milliseconds.                b:  If you select 2 then                           Enter Block Size : <1, 1000, 1000000>                 Hence, you will get result in GB/s bandwidth.Memory Benchmark :* To run Memory Benchmark follow below instructions : 1. Go to “./Memory” directory in terminal.2. Run below command to create executable file from makefile.$ makeThis will create on executable file “Memory” in Memory directory.3. Go to folder Memory and run executable file “Memory” and give input to find Memory latency and Memory throughput..Ex.       Enter Block Size (1B, 1KB, 1MB): <enter value>     Enter Number of Threads(1 or 2): <enter value>    Enter Number of iteration: <enter value between 10000 to 1000000>    Press 1.>Sequential 2.>Random: <enter value>                Once you select that you will get latency in milliseconds and throughput in MB/sec.Disk Benchmark :* To run Memory Benchmark follow below instructions : 1. Go to “./Disk” directory in terminal.2. Run below command to create executable file from makefile.$ makeThis will create on executable file “Disk” in Disk directory.3. Go to folder Disk and run executable file “Disk” and give input to find Disk latency and Disk throughput..Ex.       Read/Write:enter(r/w): <enter value>     Block size(1B=1,1KB=2,1MB=3): <enter value>     Sequential or Random(s/r): <enter value>    Enter Number of threads(1/2/4): <enter value >                Once you select that you will get latency in milliseconds and throughput in MB/sec.Network Benchmark :* To run Network Benchmark follow below instructions : 1. Go to “./Network” directory in terminal.2. Find throughput and latency for tcp :     a. Compile sertcp.java and clitcp.java  in two diffrent terminal terminal.     b. Then run it using JVM using below command     $ java clitcp and java sertcp       and enter the same input for client and server program.       Ex.Block size(1/1000/64000):<enter value>        -run server program before client program.   3.  Find throughput and latency for udp :     a. Compile serudp.java and cliudp.java  in two diffrent terminal terminal.     b. Then run it using JVM using below command     $ java cliudp and java serudp       and enter the same input for client and server program.       Ex.Block size(1/1000/64000):<enter value>        -run server program before client program.4.  Find throughput and latency for multiple threads :     a. Compile clitcpth1.java and clitcoth1.java  in two diffrent terminal terminal.     b. Then run it using JVM using below command     $ java clitcpth1 and java clitcpth1       and enter the same input for client and server program.       Ex.Block size(1/1000/64000):<enter value>           Enter number of thread(1/2);<enter value>       -run server program before client program.